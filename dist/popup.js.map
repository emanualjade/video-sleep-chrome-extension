{"version":3,"file":"popup.js","mappings":"mBAAA,MAAMA,EAAeC,SAASC,eAC5B,UAEIC,EAAgBF,SAASC,eAC7B,WAEIE,EAAgBH,SAASC,eAC7B,WAEIG,EAAgBJ,SAASC,eAC7B,WAIII,EAA0F,CAC9FC,OAAQP,EACRQ,QAASL,EACTM,QAASL,EACTM,QAASL,GAIX,SAASM,EAAkBC,EAA2BC,GAEpD,IAAK,MAAMC,KAAOR,EAAS,CACzB,MAAMS,EAAST,EAAQQ,GACnBC,IACFA,EAAOC,UAAUC,OAAO,UACxBF,EAAOG,YAAc,YAAYJ,EAAIK,MAAM,KAE/C,CAGA,MAAMC,EAAYd,EAAQM,GACtBQ,IACFA,EAAUF,YAAcL,EACpB,oBAAoBD,EAAaO,MAAM,KACvC,YAAYP,EAAaO,MAAM,KACnCC,EAAUJ,UAAUK,OAAO,SAAUR,GAEzC,CAIA,SAASS,EAAgBV,GACvB,IAAIW,EAAY,GACK,YAAjBX,EAA4BW,EAAY,KAClB,YAAjBX,EAA4BW,EAAY,KACvB,YAAjBX,EAA4BW,EAAY,KACvB,WAAjBX,IAA2BW,EAAY,KAEhDC,OAAOC,OAAOC,aAAa,CAAEC,KAAMJ,IAAaK,MAAMC,QAAQC,MAChE,CAQA,SAASC,EAAkBC,EAAuBC,GAChDT,OAAOU,QAAQC,KAAKC,IAAI,eAAgBC,IAClCA,EAAKC,cAAgBN,EAEvBR,OAAOU,QAAQC,KAAKlB,OAAO,eAAe,KACxCN,EAAkBqB,GAAU,GAC5BR,OAAOC,OAAOC,aAAa,CAAEC,KAAM,KAAMC,MAAMC,QAAQC,OACvDN,OAAOe,KAAKC,MAAM,CAAEC,QAAQ,EAAMC,eAAe,IAASH,SACrCI,IAAfJ,EAAK,GAAGK,IACVpB,OAAOe,KACJM,YAAYN,EAAK,GAAGK,GAAI,CAAEE,cAAc,IACxClB,MAAMC,QAAQC,MACnB,GACA,IAIJN,OAAOU,QAAQC,KAAKY,IAAI,CAAET,YAAaN,IAAY,KACjDrB,EAAkBqB,GAAU,GAC5BV,EAAgBU,GAChBR,OAAOe,KAAKC,MAAM,CAAEC,QAAQ,EAAMC,eAAe,IAASH,SACrCI,IAAfJ,EAAK,GAAGK,IACVpB,OAAOe,KACJM,YAAYN,EAAK,GAAGK,GAAI,CAAEI,gBAAiBf,IAC3CL,MAAMC,QAAQC,MACnB,GACA,GAEN,GAEJ,CAnCAN,OAAOU,QAAQC,KAAKC,IAAI,eAAgBC,IACtC1B,EAAkB0B,EAAKC,aAAa,GACpChB,EAAgBe,EAAKC,YAAY,IAoCnCnC,SAAAA,EAAe8C,iBAAiB,SAAS,IACvClB,EAAkB,UAAW,QAE/B3B,SAAAA,EAAe6C,iBAAiB,SAAS,IACvClB,EAAkB,UAAW,QAE/B1B,SAAAA,EAAe4C,iBAAiB,SAAS,IACvClB,EAAkB,UAAW,QAE/B/B,SAAAA,EAAciD,iBAAiB,SAAS,IACtClB,EAAkB,SAAU,M","sources":["webpack://video-sleep-chrome-extension/./src/popup.ts"],"sourcesContent":["const pause5Button = document.getElementById(\n  \"pause5\",\n) as HTMLButtonElement | null\nconst pause30Button = document.getElementById(\n  \"pause30\",\n) as HTMLButtonElement | null\nconst pause45Button = document.getElementById(\n  \"pause45\",\n) as HTMLButtonElement | null\nconst pause60Button = document.getElementById(\n  \"pause60\",\n) as HTMLButtonElement | null\n\n/// Define the buttons object\nconst buttons: Record<\"pause5\" | \"pause30\" | \"pause45\" | \"pause60\", HTMLButtonElement | null> = {\n  pause5: pause5Button,\n  pause30: pause30Button,\n  pause45: pause45Button,\n  pause60: pause60Button,\n};\ntype buttonsType = keyof typeof buttons\n// Function to update button text and state\nfunction updateButtonState(activeButton: buttonsType, makeActive: boolean): void {\n  // Remove the active class from all buttons and reset text content\n  for (const key in buttons) {\n    const button = buttons[key as buttonsType];\n    if (button) {\n      button.classList.remove(\"active\");\n      button.textContent = `Pause in ${key.slice(5)}`;\n    }\n  }\n\n  // Update the active button\n  const activeBtn = buttons[activeButton];\n  if (activeBtn) {\n    activeBtn.textContent = makeActive\n      ? `Disable Pause in ${activeButton.slice(5)}`\n      : `Pause in ${activeButton.slice(5)}`;\n    activeBtn.classList.toggle(\"active\", makeActive);\n  }\n}\n\n\n// Function to update the badge text\nfunction updateBadgeText(activeButton: string): void {\n  let badgeText = \"\"\n  if (activeButton === \"pause30\") badgeText = \"30\"\n  else if (activeButton === \"pause45\") badgeText = \"45\"\n  else if (activeButton === \"pause60\") badgeText = \"60\"\n  else if (activeButton === \"pause5\") badgeText = \"5\"\n\n  chrome.action.setBadgeText({ text: badgeText }).catch(console.error)\n}\n\n// Load the current state from chrome storage\nchrome.storage.sync.get(\"activePause\", (data: Record<string, buttonsType>) => {\n  updateButtonState(data.activePause, true)\n  updateBadgeText(data.activePause)\n})\n\nfunction handleButtonClick(buttonId: buttonsType, delay: number): void {\n  chrome.storage.sync.get(\"activePause\", (data: Record<string, string>) => {\n    if (data.activePause === buttonId) {\n      // Disable the active pause\n      chrome.storage.sync.remove(\"activePause\", () => {\n        updateButtonState(buttonId, false)\n        chrome.action.setBadgeText({ text: \"\" }).catch(console.error)\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n          if (tabs[0].id !== undefined) {\n            chrome.tabs\n              .sendMessage(tabs[0].id, { clearPausing: true })\n              .catch(console.error)\n          }\n        })\n      })\n    } else {\n      // Set new active pause\n      chrome.storage.sync.set({ activePause: buttonId }, () => {\n        updateButtonState(buttonId, true)\n        updateBadgeText(buttonId)\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n          if (tabs[0].id !== undefined) {\n            chrome.tabs\n              .sendMessage(tabs[0].id, { startPauseTimer: delay })\n              .catch(console.error)\n          }\n        })\n      })\n    }\n  })\n}\n\n// Event listeners for each button\npause30Button?.addEventListener(\"click\", () =>\n  handleButtonClick(\"pause30\", 1800000),\n) // 30 minutes\npause45Button?.addEventListener(\"click\", () =>\n  handleButtonClick(\"pause45\", 2700000),\n) // 45 minutes\npause60Button?.addEventListener(\"click\", () =>\n  handleButtonClick(\"pause60\", 3600000),\n) // 60 minutes\npause5Button?.addEventListener(\"click\", () =>\n  handleButtonClick(\"pause5\", 300000),\n) // 5 minutes\n"],"names":["pause5Button","document","getElementById","pause30Button","pause45Button","pause60Button","buttons","pause5","pause30","pause45","pause60","updateButtonState","activeButton","makeActive","key","button","classList","remove","textContent","slice","activeBtn","toggle","updateBadgeText","badgeText","chrome","action","setBadgeText","text","catch","console","error","handleButtonClick","buttonId","delay","storage","sync","get","data","activePause","tabs","query","active","currentWindow","undefined","id","sendMessage","clearPausing","set","startPauseTimer","addEventListener"],"sourceRoot":""}