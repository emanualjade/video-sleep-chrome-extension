{"version":3,"file":"content.js","mappings":"mBAkBA,SAASA,IACP,MAAMC,EAAUC,SAASC,eAAe,iBACpCF,GACFC,SAASE,KAAKC,YAAYJ,EAE9B,CAGA,IAAIK,EAGJ,SAASC,EAAqBC,GAC5BF,EAAcG,OAAOC,YAAW,KAC9B,MAAMC,EAAeT,SAASU,cAAc,SACxCD,IAAiBA,EAAaE,SAChCF,EAAaG,QAjCnB,WACE,MAAMb,EAAUC,SAASa,cAAc,OACvCd,EAAQe,GAAK,gBACbf,EAAQgB,MAAMC,SAAW,QACzBjB,EAAQgB,MAAME,IAAM,IACpBlB,EAAQgB,MAAMG,KAAO,IACrBnB,EAAQgB,MAAMI,MAAQ,OACtBpB,EAAQgB,MAAMK,OAAS,OACvBrB,EAAQgB,MAAMM,gBAAkB,QAChCtB,EAAQgB,MAAMO,QAAU,IACxBvB,EAAQgB,MAAMQ,OAAS,OAGvBxB,EAAQyB,iBAAiB,QAAS1B,GAElCE,SAASE,KAAKuB,YAAY1B,EAC5B,CAkBM2B,GACF,GACCpB,EACL,CAOAqB,OAAOC,QAAQC,UAAUC,aAAaC,SACJC,IAA5BD,EAAQE,kBAEVC,aAAa9B,GAEbC,EAAqB0B,EAAQE,kBAG3BF,EAAQI,oBAEUH,IAAhB5B,GACF8B,aAAa9B,GAEfA,OAAc4B,EAChB,IAIFL,OAAOS,QAAQC,KAAKC,IAAI,eAAgBC,IACtC,GAAIA,EAAKC,YAAa,CACpB,IAAIlC,EACqB,YAArBiC,EAAKC,YACPlC,EAAQ,KACsB,YAArBiC,EAAKC,YACdlC,EAAQ,KACsB,YAArBiC,EAAKC,YACdlC,EAAQ,KACsB,WAArBiC,EAAKC,cACdlC,EAAQ,KAENA,GACFD,EAAqBC,EAEzB,I","sources":["webpack://video-sleep-chrome-extension/./src/content.ts"],"sourcesContent":["function addBlackOverlay() {\n  const overlay = document.createElement(\"div\")\n  overlay.id = \"black-overlay\"\n  overlay.style.position = \"fixed\"\n  overlay.style.top = \"0\"\n  overlay.style.left = \"0\"\n  overlay.style.width = \"100%\"\n  overlay.style.height = \"100%\"\n  overlay.style.backgroundColor = \"black\"\n  overlay.style.opacity = \"1\"\n  overlay.style.zIndex = \"9999\" // Make sure it is on top of other elements\n\n  // Add event listener to remove the overlay when clicked\n  overlay.addEventListener(\"click\", removeBlackOverlay)\n\n  document.body.appendChild(overlay)\n}\n\nfunction removeBlackOverlay() {\n  const overlay = document.getElementById(\"black-overlay\")\n  if (overlay) {\n    document.body.removeChild(overlay)\n  }\n}\n\n// Variable to store the active timer ID\nlet activeTimer: number | undefined = undefined\n\n// Function to pause the video after a specified delay\nfunction pauseVideoAfterDelay(delay: number) {\n  activeTimer = window.setTimeout(() => {\n    const videoElement = document.querySelector(\"video\")\n    if (videoElement && !videoElement.paused) {\n      videoElement.pause()\n      addBlackOverlay()\n    }\n  }, delay)\n}\n\ninterface Message {\n  startPauseTimer?: number\n  clearPausing?: boolean\n}\n// Listen for messages from popup.js\nchrome.runtime.onMessage.addListener((message: Message) => {\n  if (message.startPauseTimer !== undefined) {\n    // Clear any existing timer\n    clearTimeout(activeTimer)\n    // Start a new timer with the specified delay\n    pauseVideoAfterDelay(message.startPauseTimer)\n  }\n\n  if (message.clearPausing) {\n    // Clear the current timer without starting a new one\n    if (activeTimer !== undefined) {\n      clearTimeout(activeTimer)\n    }\n    activeTimer = undefined\n  }\n})\n\n// Check if a pause timer is active on page load/reload\nchrome.storage.sync.get(\"activePause\", (data) => {\n  if (data.activePause) {\n    let delay\n    if (data.activePause === \"pause30\") {\n      delay = 1800000 // 30 minutes\n    } else if (data.activePause === \"pause45\") {\n      delay = 2700000 // 45 minutes\n    } else if (data.activePause === \"pause60\") {\n      delay = 3600000 // 60 minutes\n    } else if (data.activePause === \"pause5\") {\n      delay = 300000 // 5 minutes\n    }\n    if (delay) {\n      pauseVideoAfterDelay(delay)\n    }\n  }\n})\n"],"names":["removeBlackOverlay","overlay","document","getElementById","body","removeChild","activeTimer","pauseVideoAfterDelay","delay","window","setTimeout","videoElement","querySelector","paused","pause","createElement","id","style","position","top","left","width","height","backgroundColor","opacity","zIndex","addEventListener","appendChild","addBlackOverlay","chrome","runtime","onMessage","addListener","message","undefined","startPauseTimer","clearTimeout","clearPausing","storage","sync","get","data","activePause"],"sourceRoot":""}