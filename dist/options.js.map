{"version":3,"file":"options.js","mappings":"+BAGA,SAASA,EAAwBC,GAC/B,MAAMC,EAAOC,SAASC,eACpB,uBAEFF,EAAKG,UAAY,GACjBJ,EAAMK,SAASC,IACb,MAAMC,EAAKL,SAASM,cAAc,MAClCD,EAAGE,YAAcH,EACjBL,EAAKS,YAAYH,EAAG,GAExB,CAGAI,OAAOC,QAAQC,KAAKC,IAAI,MAAOC,I,MAE7BhB,EAD+B,QAAjB,EAAAgB,EAAKC,oBAAY,QAAI,GACL,IAKC,QADjC,EAAAd,SACGC,eAAe,uBAAe,SAC7Bc,iBAAiB,UAAU,SAAUC,GACrCA,EAAMC,iBAEN,MAAMC,EAAQlB,SAASC,eAAe,gBAChCkB,EAAkBD,EAAME,MAAMC,OAEhCF,GAEFV,OAAOC,QAAQC,KAAKC,IAAI,MAAOC,I,MAC7B,MAAMf,EAAyB,QAAjB,EAAAe,EAAKC,oBAAY,QAAI,GAG9BhB,EAAMwB,SAASH,IAClBrB,EAAMyB,KAAKJ,GAIb,MAAMK,EAAa,+BAAsBX,GAAI,CAAEC,aAAchB,IAC7DW,OAAOC,QAAQC,KAAKc,IAAID,GAAe,KAErC3B,EAAwBC,GAGxBoB,EAAME,MAAQ,GAGdX,OAAOiB,KAAKC,MAAM,CAAC,GAAID,IACrBA,EAAKvB,SAASyB,SACGC,IAAXD,EAAIE,IACNrB,OAAOiB,KACJK,YAAYH,EAAIE,GAAI,CAAEhB,aAAchB,IACpCkC,OAAOC,IACNC,QAAQD,MACN,gCACAL,EAAIE,GACJG,EACD,GAEP,GACA,GACF,GACF,GAGR,G","sources":["webpack://video-sleep-chrome-extension/./src/options.ts"],"sourcesContent":["import { StoredConfig } from \"./common\"\n\n// Function to update the displayed list of excluded hosts\nfunction updateExcludedHostsList(hosts: string[]): void {\n  const list = document.getElementById(\n    \"excluded-hosts-list\",\n  ) as HTMLUListElement\n  list.innerHTML = \"\" // Clear the existing list\n  hosts.forEach((host) => {\n    const li = document.createElement(\"li\")\n    li.textContent = host\n    list.appendChild(li)\n  })\n}\n\n// Load stored configuration, including excluded hosts\nchrome.storage.sync.get(null, (data: StoredConfig) => {\n  const hosts = data.excludeHosts ?? []\n  updateExcludedHostsList(hosts)\n})\n\n// Handle form submission\ndocument\n  .getElementById(\"exclude-form\")\n  ?.addEventListener(\"submit\", function (event: Event) {\n    event.preventDefault()\n\n    const input = document.getElementById(\"exclude_host\") as HTMLInputElement\n    const newHost: string = input.value.trim()\n\n    if (newHost) {\n      // Retrieve the current list of hosts\n      chrome.storage.sync.get(null, (data: StoredConfig) => {\n        const hosts = data.excludeHosts ?? []\n\n        // Add the new host to the list if it's not already included\n        if (!hosts.includes(newHost)) {\n          hosts.push(newHost)\n        }\n\n        // Save the updated configuration with excluded hosts\n        const updatedConfig: StoredConfig = { ...data, excludeHosts: hosts }\n        chrome.storage.sync.set(updatedConfig, () => {\n          // Update the UI with the new list\n          updateExcludedHostsList(hosts)\n\n          // Clear the input field\n          input.value = \"\"\n\n          // Send the updated list to all tabs\n          chrome.tabs.query({}, (tabs: chrome.tabs.Tab[]) => {\n            tabs.forEach((tab) => {\n              if (tab.id !== undefined) {\n                chrome.tabs\n                  .sendMessage(tab.id, { excludeHosts: hosts })\n                  .catch((error) => {\n                    console.error(\n                      \"Could not send message to tab\",\n                      tab.id,\n                      error,\n                    )\n                  })\n              }\n            })\n          })\n        })\n      })\n    }\n  })\n"],"names":["updateExcludedHostsList","hosts","list","document","getElementById","innerHTML","forEach","host","li","createElement","textContent","appendChild","chrome","storage","sync","get","data","excludeHosts","addEventListener","event","preventDefault","input","newHost","value","trim","includes","push","updatedConfig","set","tabs","query","tab","undefined","id","sendMessage","catch","error","console"],"sourceRoot":""}