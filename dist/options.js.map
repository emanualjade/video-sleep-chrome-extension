{"version":3,"file":"options.js","mappings":"mBAEAA,OAAOC,QAAQC,KAAKC,IAAI,MAAOC,I,MAC7B,MAEMC,EAAgC,QAAlB,EAFLD,EAEYC,mBAAW,QAAI,GACpCC,EAAQC,SAASC,eAAe,gBACtCF,EAAMG,MAAQJ,EACdC,EAAMI,iBAAiB,UAAWC,IAChC,GAAIA,EAAMC,kBAAkBC,iBAAkB,CAC5C,MACMC,EAA8B,CAAET,YADRM,EAAMC,OAAOH,OAE3CT,OAAOC,QAAQC,KAAKa,IAAID,GAAeE,MAAMC,QAAQC,OAEhDlB,OAAOmB,KACTC,MAAM,CAAC,GACPC,MAAMF,IAEL,IAAK,MAAMG,KAAOH,EACZG,EAAIC,EAQV,IAEDP,OAAOE,IACND,QAAQC,MAAM,uBAAwBA,EAAM,GAElD,IACA,G","sources":["webpack://video-sleep-chrome-extension/./src/options.ts"],"sourcesContent":["import { StoredConfig } from \"./common\"\n\nchrome.storage.sync.get(null, (data) => {\n  const config = data as StoredConfig\n\n  const excludeHost = config.excludeHost ?? \"\"\n  const input = document.getElementById(`exclude_host`) as HTMLInputElement\n  input.value = excludeHost\n  input.addEventListener(\"change\", (event) => {\n    if (event.target instanceof HTMLInputElement) {\n      const updatedExcludeWebsite = event.target.value\n      const updatedConfig: StoredConfig = { excludeHost: updatedExcludeWebsite }\n      chrome.storage.sync.set(updatedConfig).catch(console.error)\n      // Send message to content script in all tabs\n      void chrome.tabs\n        .query({})\n        .then((tabs) => {\n          // const message: Message = {excludeHost: updatedExcludeWebsite}\n          for (const tab of tabs) {\n            if (tab.id !== undefined) {\n              // chrome.tabs\n              //     .sendMessage(tab.id, message)\n              //     .catch(() => {\n              //         // We ignore tabs without a proper URL, like chrome://extensions/\n              //         // Do nothing\n              //     })\n            }\n          }\n        })\n        .catch((error: unknown) => {\n          console.error(\"Could not query tabs\", error)\n        })\n    }\n  })\n})\n"],"names":["chrome","storage","sync","get","data","excludeHost","input","document","getElementById","value","addEventListener","event","target","HTMLInputElement","updatedConfig","set","catch","console","error","tabs","query","then","tab","id"],"sourceRoot":""}